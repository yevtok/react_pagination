{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","firstPage","lastPage","className","cn","disabled","href","onClick","map","page","active","handlePageChange","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","totalItems","length","firstDisplayedItem","lastDisplayedItem","visibleItems","slice","id","onChange","event","Number","target","value","changePerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAoBjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA1BR,WACON,GACHL,EAAaD,EAAc,IAmBzB,oBAWDK,EAAMQ,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IAFhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA7BnB,SAA0BE,GACpBA,IAASd,GACXC,EAAaa,GA2BQE,CAAiBF,IAJlC,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAhDR,WACOL,GACHN,EAAaD,EAAc,IAyCzB,wBClEFiB,EAAQ1B,EAAW,EAAG,IAAIsB,KAAI,SAAClB,GAAD,qBAAeA,MAEtCuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAaN,EAAMO,OACnBC,EAAqBzB,EAAcqB,EAAeA,EAAe,EACjEK,EACF1B,EAAcqB,EAAeE,EAC3BA,EACAvB,EAAcqB,EAOpB,IAAMM,EAAeV,EAAMW,MAAMH,EAAqB,EAAGC,GAEzD,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCyB,EADjC,cACyDC,EADzD,eACiFH,EADjF,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,SAAU,SAACC,GAAD,OArBpB,SAAuBA,GACrBT,EAAgBU,OAAOD,EAAME,OAAOC,QACpCd,EAAe,GAmBce,CAAcJ,IACnCG,MAAOb,EALT,UAOE,wBAAQa,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOyB,EACPxB,QAASsB,EACTrB,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAwBM,EAAeN,MAGvD,6BACGa,EAAad,KAAI,SAACwB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0e4cf62.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pagesCount;\n\n  function handlePreviousPage() {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  }\n\n  function handleNextPage() {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  }\n\n  function handlePageChange(page: number) {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={handlePreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={cn('page-item', { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const totalItems = items.length;\n  const firstDisplayedItem = currentPage * itemsPerPage - itemsPerPage + 1;\n  const lastDisplayedItem\n    = currentPage * itemsPerPage > totalItems\n      ? totalItems\n      : currentPage * itemsPerPage;\n\n  function changePerPage(event: React.ChangeEvent<HTMLSelectElement>) {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  }\n\n  const visibleItems = items.slice(firstDisplayedItem - 1, lastDisplayedItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstDisplayedItem} - ${lastDisplayedItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => changePerPage(event)}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page: number): void => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}